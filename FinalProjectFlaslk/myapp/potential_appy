class TravelBot:
    def __init__(self, csv_data, api_data):
        self.csv_data = csv_data
        self.api_data = api_data

    def respond(self, question):
        question = question.lower()
        filtered = self.csv_data.copy()
        score = pd.Series(0, index=filtered.index)

        # Scoring temperature preference
        if "warm" in question:
            score += (filtered['temperature'] - 65).clip(lower=0)
        elif "cold" in question:
            score += (65 - filtered['temperature']).clip(lower=0)

        # Scoring setting preference
        if "urban" in question:
            score += (filtered['setting'].str.lower() == 'urban') * 10
        elif "rural" in question:
            score += (filtered['setting'].str.lower() == 'rural') * 10

        # Scoring cheap flight preference
        if "cheap flight" in question or "cheap" in question or "budget" in question:
            max_cost = filtered['flight_cost'].max()
            normalized_cost = 1 - (filtered['flight_cost'] / max_cost)
            score += normalized_cost * 10

        # If no clear intent detected, return help message
        if score.sum() == 0:
            return "Tell me more about your preferences! You can mention temperature (warm/cold), setting (urban/rural), or flight budget."

        # Get top results
        top_indices = score.nlargest(3).index
        top_cities = filtered.loc[top_indices, 'city']

        if not top_cities.empty:
            return f"Based on your preferences, consider: {', '.join(top_cities)}"
        else:
            return "Hmm, I couldn't find a great match. Try adjusting your preferences!"
